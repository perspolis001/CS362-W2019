        -:    0:Source:cardtest4.c
        -:    0:Graph:cardtest4.gcno
        -:    0:Data:cardtest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <stdlib.h>
        -:    4:#include <stdio.h>
        -:    5:#include "rngs.h"
        -:    6:#include "assert.h"
        -:    7:
        4:    8:void ASSERT(int test) {
        4:    9:    if (test) {
        3:   10:        printf ("TEST PASSED!\n");
        -:   11:
        -:   12:    }
        -:   13:    else{
        1:   14:        printf("TEST FAILED!\n");
        -:   15:
        -:   16:    }
        4:   17:}
        -:   18:
        1:   19:int main () {
        1:   20:    printf("\n*************Card Test 4: Council Room**************\n");
        -:   21:
        -:   22:
        -:   23:    int opponentHandCount, handCount, seed, numBuys;
        -:   24:    struct gameState GameState;
        1:   25:    int k[10] = {minion, smithy, gardens, tribute, baron, adventurer, cutpurse, mine, embargo, outpost};
        1:   26:    seed = 10;
        1:   27:    initializeGame(2, k, seed, &GameState);
        -:   28:
        -:   29:
        1:   30:    GameState.whoseTurn = 1;
        1:   31:    GameState.hand[1][0] = council_room;
        1:   32:    GameState.deckCount[1] = 3;
        -:   33:
        1:   34:    opponentHandCount = GameState.handCount[1];
        -:   35:
        1:   36:    GameState.whoseTurn = 0;
        -:   37:
        1:   38:    GameState.hand[0][0] = council_room;
        -:   39:
        1:   40:    GameState.deckCount[0] = 3;
        -:   41:
        -:   42:
        -:   43:
        -:   44:
        1:   45:    handCount = GameState.handCount[0];
        1:   46:    numBuys = GameState.numBuys;
        1:   47:    int cardReturnValue =  cardEffect(council_room, 1, 1, 1, &GameState, handCount, NULL);
        1:   48:        printf("**Should +4 cards to the players hand:\n");
        1:   49:    ASSERT(handCount - 1 + 4 == GameState.handCount[0]);
        1:   50:        printf("\n**Should buy 1 extra card:\n");
        1:   51:        ASSERT(numBuys + 1 == GameState.numBuys);
        1:   52:        printf("\n**Opponent draws 1 card:\n");
        1:   53:        ASSERT(opponentHandCount + 1 == GameState.handCount[1]);
        1:   54:        printf("\n**Card returned from cardEffect with the correct value of 0:\n");
        1:   55:        ASSERT(cardReturnValue == 0);
        -:   56:
        -:   57:}
        -:   58:
